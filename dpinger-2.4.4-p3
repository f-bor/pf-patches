--- orig/src/etc/inc/util.inc   2020-01-26 10:49:29.219838033 +0100
+++ dest/src/etc/inc/util.inc   2020-02-27 10:06:15.967550376 +0100
@@ -640,6 +640,18 @@
 /* returns true if $ipaddr is a valid dotted IPv4 address or a IPv6
        false - not valid
        true (numeric 4 or 6) - if valid, gives type of address */
+function is_array_ipaddr($ipaddrs) {
+       if (gettype($ipaddrs) == 'string')
+               $ipaddrs = explode(' ', $ipaddrs);
+       foreach ($ipaddrs as $ipaddr)
+               if (!is_ipaddr($ipaddr))
+                       return false;
+       return true;
+}
+
+/* returns true if $ipaddr is a valid dotted IPv4 address or a IPv6
+       false - not valid
+       true (numeric 4 or 6) - if valid, gives type of address */
 function is_ipaddr($ipaddr) {
        if (is_ipaddrv4($ipaddr)) {
                return 4;
--- orig/src/etc/inc/gwlb.inc   2020-01-26 10:49:23.987873177 +0100
+++ dest/src/etc/inc/gwlb.inc   2020-02-27 09:54:09.412304675 +0100
@@ -98,13 +98,17 @@

    $dpinger_defaults = return_dpinger_defaults();

+   $monitors = explode(' ', $gateway['monitor']);
+   // $suffix = str_replace(' ', '_', $gateway['monitor']);
+   $suffix = $monitors[0];
+
    $prefix = "{$g['varrun_path']}/dpinger_{$gateway['name']}~" .
-       "{$gateway['gwifip']}~{$gateway['monitor']}";
+       "{$gateway['gwifip']}~{$suffix}";
    # dpinger socket path should not be longer then uaddr.sun_path
    if (strlen($prefix) > 95) {
        $prefix = "{$g['varrun_path']}/dpinger_{$gateway['name']}~" .
            substr(md5($gateway['gwifip']),0,8) . "~" .
-           $gateway['monitor'];
+           $suffix;
    }
    $pidfile = $prefix . ".pid";
    $socket = $prefix . ".sock";
@@ -198,7 +202,7 @@
        if (isset($gateway['monitor_disable'])) {
            continue;
        }
-       if (empty($gateway['monitor']) || !is_ipaddr($gateway['monitor'])) {
+       if (empty($gateway['monitor']) || !is_array_ipaddr($gateway['monitor'])) {
            if (is_ipaddr($gateway['gateway'])) {
                $gateways_arr[$gwname]['monitor'] = $gateway['gateway'];
            } else { /* No chance to get an ip to monitor skip target. */
@@ -206,10 +210,18 @@
            }
        }

+       $monitors = explode(' ', $gateway['monitor']);
+       $monitors_left = array();
        /* if the monitor address is already used before, skip */
-       if (in_array($gateway['monitor'], $monitor_ips)) {
-           continue;
+       foreach ($monitors as $monitor ) {
+           if (in_array($gateway['monitor'], $monitor_ips)) {
+               continue;
+           }
+           $monitors_left[] = $monitor;
        }
+       if ( count($monitors_left) == 0 )
+           continue ;
+       $gateway['monitor'] = implode(' ', $monitors_left);

        /* Interface ip is needed since dpinger will bind a socket to it.
         * However the config GUI should already have checked this and when
@@ -236,14 +248,16 @@
             */
            if (is_ipaddrv4($gateway['gateway']) && $gateway['monitor'] != $gateway['gateway']) {
                log_error(sprintf(gettext('Removing static route for monitor %1$s and adding a new route through %2$s'), $gateway['monitor'], $gateway['gateway']));
-               $route_to = "-host {$gateway['monitor']}";
-               if (interface_isppp_type($gateway['friendlyiface'])) {
-                   route_add_or_change("{$route_to} -iface {$gateway['interface']}");
-               } else {
-                   route_add_or_change("{$route_to} {$gateway['gateway']}");
-               }
+               foreach ( $monitors_left as $monitor ) {
+                   $route_to = "-host {$monitor}";
+                   if (interface_isppp_type($gateway['friendlyiface'])) {
+                       route_add_or_change("{$route_to} -iface {$gateway['interface']}");
+                   } else {
+                       route_add_or_change("{$route_to} {$gateway['gateway']}");
+                   }

-               pfSense_kill_states("0.0.0.0/0", $gateway['monitor'], $gateway['interface'], "icmp");
+                   pfSense_kill_states("0.0.0.0/0", $monitor, $gateway['interface'], "icmp");
+               }
            }
        } else if ($gateway['ipprotocol'] == "inet6") { // This is an IPv6 gateway...
            if (is_linklocal($gateway['gateway']) &&
@@ -290,7 +304,7 @@
            continue;
        }

-       $monitor_ips[] = $gateway['monitor'];
+       $monitor_ips = $monitor_ips + $monitors_left;
        $gateways_arr[$gwname]['enable_dpinger'] = true;
        $gateways_arr[$gwname]['gwifip'] = $gwifip;
    }
@@ -463,7 +477,7 @@
        if (!isset($gwitem['monitor_disable'])) {
            continue;
        }
-       if (!is_ipaddr($gwitem['monitor'])) {
+       if (!is_array_ipaddr($gwitem['monitor'])) {
            $realif = $gwitem['interface'];
            $tgtip = get_interface_gateway($realif);
            if (!is_ipaddr($tgtip)) {
@@ -598,7 +612,7 @@
            if (!is_array($gateway) || empty($gateway)) {
                continue;
            }
-
+
            /* Increment it here to do not skip items */
            $i++;
            if (isset($gateway['defaultgw'])) {
@@ -1078,7 +1092,7 @@
            if ($gwsttng['ipprotocol'] != $ipprotocol) {
                continue;
            }
-
+
            if ((isset($gwsttng['monitor_disable']) || isset($gwsttng['action_disable']) || $gateways_status[$gwname]['status'] == "none")) {
                $set_dfltgwname = $gwname;
                break;
@@ -1427,7 +1441,7 @@
    $gateways_arr = return_gateways_array(false, true);
    if (!empty($gateways_arr[$name])) {
        $gateway = $gateways_arr[$name];
-       if (!is_ipaddr($gateway['monitor'])) {
+       if (!is_array_ipaddr($gateway['monitor'])) {
            return $gateway['gateway'];
        }

@@ -1460,7 +1474,7 @@

 function get_interface_gateway($interface, &$dynamic = false) {
    global $config, $g;
-
+
    $interface = get_root_interface($interface);

    $gw = NULL;
@@ -1779,7 +1793,10 @@
        }
    }
    if (($gateway_settings['monitor'] != "") && ($gateway_settings['monitor'] != "dynamic")) {
-       validateipaddr($gateway_settings['monitor'], IPV4V6, "Monitor IP", $input_errors, false);
+       $monitors = explode(' ', $gateway_settings['monitor']);
+       foreach ($monitors as $monitor) {
+           validateipaddr($monitor, IPV4V6, "Monitor IP", $input_errors, false);
+       }
    }
    if (isset($gateway_settings['data_payload']) && is_numeric($gateway_settings['data_payload']) && $gateway_settings['data_payload'] < 0) {
        $input_errors[] = gettext("A valid data payload must be specified.");
@@ -1794,12 +1811,15 @@
        }
    }
    /* only allow correct IPv4 and IPv6 monitor addresses */
-   if (($gateway_settings['monitor'] <> "") && is_ipaddr($gateway_settings['monitor']) && $gateway_settings['monitor'] != "dynamic") {
-       if (is_ipaddrv6($gateway_settings['monitor']) && ($gateway_settings['ipprotocol'] == "inet")) {
-           $input_errors[] = sprintf(gettext("The IPv6 monitor address '%s' can not be used on a IPv4 gateway."), $gateway_settings['monitor']);
-       }
-       if (is_ipaddrv4($gateway_settings['monitor']) && ($gateway_settings['ipprotocol'] == "inet6")) {
-           $input_errors[] = sprintf(gettext("The IPv4 monitor address '%s' can not be used on a IPv6 gateway."), $gateway_settings['monitor']);
+   if (($gateway_settings['monitor'] <> "") && is_array_ipaddr($gateway_settings['monitor']) && $gateway_settings['monitor'] != "dynamic") {
+       $monitors = explode(' ', $gateway_settings['monitor']);
+       foreach ($monitors as $monitor) {
+           if (is_ipaddrv6($monitor) && ($gateway_settings['ipprotocol'] == "inet")) {
+               $input_errors[] = sprintf(gettext("The IPv6 monitor address '%s' can not be used on a IPv4 gateway."), $monitor);
+           }
+           if (is_ipaddrv4($monitor) && ($gateway_settings['ipprotocol'] == "inet6")) {
+               $input_errors[] = sprintf(gettext("The IPv4 monitor address '%s' can not be used on a IPv6 gateway."), $monitor);
+           }
        }
    }

@@ -1824,10 +1844,14 @@
                    break;
                }
            }
-           if (is_ipaddr($gateway_settings['monitor'])) {
-               if (($gateway['monitor'] <> "") && ($gateway_settings['monitor'] == $gateway['monitor']) && ($gateway['attribute'] !== "system")) {
-                   $input_errors[] = sprintf(gettext('The monitor IP address "%s" is already in use. A different monitor IP must be chosen.'), $gateway_settings['monitor']);
-                   break;
+           if (is_array_ipaddr($gateway_settings['monitor']) && is_array_ipaddr($gateway['monitor']) ) {
+               $monitors = explode(' ', $gateway_settings['monitor']);
+               $other_monitors = explode(' ', $gateway['monitor']);
+               foreach ($monitors as $monitor) {
+                   if (($gateway['monitor'] <> "") && (in_array($monitor, $other_monitors)) && ($gateway['attribute'] !== "system")) {
+                       $input_errors[] = sprintf(gettext('The monitor IP address "%s" is already in use. A different monitor IP must be chosen.'), $gateway_settings['monitor']);
+                       break;
+                   }
                }
            }
        }
@@ -1969,7 +1993,7 @@

 // A subsequent "apply" step will implement the added/changed gateway.

-function save_gateway($gateway_settings, $realid = "") {
+Function save_gateway($gateway_settings, $realid = "") {
    global $config;

    init_config_arr(array('gateways', 'gateway_item'));
@@ -2014,9 +2038,9 @@
    if ($gateway_settings['force_down'] == "yes") {
        $gateway['force_down'] = true;
    }
-   if (is_ipaddr($gateway_settings['monitor'])) {
+   //if (is_ipaddr($gateway_settings['monitor'])) {
        $gateway['monitor'] = $gateway_settings['monitor'];
-   }
+   //}
    if (isset($gateway_settings['data_payload']) && $gateway_settings['data_payload'] > 0) {
        $gateway['data_payload'] = $gateway_settings['data_payload'];
    }
